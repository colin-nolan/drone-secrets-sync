---

kind: pipeline
name: lint
steps:
  - name: lint-code
    image: golangci/golangci-lint
    commands:
      - make lint-code
    depends_on: []

  - name: lint-markdown
    image: python:3-alpine
    commands:
      - apk add --update-cache make
      - pip install mdformat-gfm
      - make lint-markdown
    depends_on: []

---

kind: pipeline
name: test
steps:
  - name: test
    image: golang:alpine
    commands:
      - apk add --update-cache gcc libc-dev make
      - make test

  - name: publish-coverage
    image: robertstettner/drone-codecov
    settings:
      token: 
        from_secret: codecov_token

---

kind: pipeline
name: build
steps:
  - name: build-binary
    image: golang:alpine
    commands:
      - apk add --update-cache git make
      - git config --global --add safe.directory "$(pwd)"
      - make build

  - name: build-container
    # Unfortunately, we cannot use the official kaniko image because Drone CI converts commands
    # into a shell script and the kaniko image does not have a shell (https://docs.drone.io/pipeline/docker/syntax/steps/#commands)
    image: golang:alpine
    commands:
      - apk add --update-cache bash git make
      # Build kaniko
      - if [[ ! -d build/thrid-party/kaniko ]]; then git clone --depth=1 --branch=main https://github.com/GoogleContainerTools/kaniko.git build/thrid-party/kaniko; fi
      - cd build/thrid-party/kaniko && make out/executor && cd -
      # Build container
      - mkdir -p build
      - git config --global --add safe.directory "$(pwd)"
      - make build-container KANIKO_EXECUTOR=build/thrid-party/kaniko/out/executor

  - name: link-latest
    image: alpine
    commands:
      - apk add --update-cache git make
      - git config --global --add safe.directory "$${PWD}"
      - version="$(make version)"; cd build/release && ln -f -s "$${version}" latest && cd -
      - ls -altr build/release
