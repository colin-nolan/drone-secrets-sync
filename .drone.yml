---

kind: pipeline
type: docker
name: lint

platform:
  # Using arm64 not because it's required but due to CI resourcing - would ideally be "any" (https://github.com/jnohlgard/drone-yaml/tree/arch-any)
  arch: arm64

steps:
  - name: lint-code
    image: golangci/golangci-lint
    commands:
      - make lint-code
    depends_on: []

  - name: lint-markdown
    image: python:3-alpine
    commands:
      - apk add --update-cache make
      - pip install mdformat-gfm
      - make lint-markdown
    depends_on: []

---

kind: pipeline
type: docker
name: test

platform:
  arch: arm64

steps:
  - name: test
    image: golang:alpine
    commands:
      - apk add --update-cache gcc git libc-dev make
      - git config --global --add safe.directory "$${PWD}"
      - make test
  
  - name: publish-coverage
    image: alpine
    commands:
      - apk add --update-cache curl
      # This is an arch specific binary
      - curl -fsL https://uploader.codecov.io/latest/aarch64/codecov > /usr/local/bin/codecov
      - chmod +x /usr/local/bin/codecov
      - codecov
    environment:
      CODECOV_TOKEN: 
        from_secret: codecov_token
    depends_on:
      - test

---

kind: pipeline
type: docker
name: build

platform:
  arch: arm64

steps:
  # TODO: support for different archs
  - name: build-binary
    image: golang:alpine
    commands:
      - apk add --update-cache git make
      - git config --global --add safe.directory "$${PWD}"
      - make build
    depends_on: []

  # TODO: support for different arch
  - name: build-container
    # Unfortunately, we cannot use the official kaniko image because Drone CI converts commands
    # into a shell script and the kaniko image does not have a shell (https://docs.drone.io/pipeline/docker/syntax/steps/#commands)
    image: golang:alpine
    commands:
      - apk add --update-cache bash git make
      # Build kaniko
      - if [[ ! -d build/thrid-party/kaniko ]]; then git clone --depth=1 --branch=main https://github.com/GoogleContainerTools/kaniko.git build/thrid-party/kaniko; fi
      - cd build/thrid-party/kaniko && make out/executor && cd -
      # Build container
      - mkdir -p build
      - git config --global --add safe.directory "$${PWD}"
      - make build-container KANIKO_EXECUTOR=build/thrid-party/kaniko/out/executor
    depends_on: []

  - name: link-latest
    image: alpine
    commands:
      - apk add --update-cache git make
      - git config --global --add safe.directory "$${PWD}"
      - mkdir -p build/release
      - version="$(make version)"; cd build/release && ln -f -s "$${version}" latest && cd -
    depends_on: []

  - name: publish-github-release
    image: plugins/github-release:latest
    settings:
      api_key:
        from_secret: github_release_token
      files: build/release/latest/*
    when:
      event: [tag]
    depends_on:
      - build-binary
      - build-container
      - link-latest
